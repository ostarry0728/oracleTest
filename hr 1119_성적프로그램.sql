-- 성적처리프로그램
-- score 테이블 생성
CREATE TABLE SCORE (
    STUNUM NUMBER(4),
    NAME VARCHAR2(20) NOT NULL,
    KOR NUMBER(4) NOT NULL,
    ENG NUMBER(4) NOT NULL,
    MAT NUMBER(4) NOT NULL,
    TOT NUMBER(4),
    AVE NUMBER(5,1),
    RANK NUMBER(4)
);
-- 제약조건 등록
ALTER TABLE SCORE ADD CONSTRAINT SCORE_STUNUM_PK PRIMARY KEY(STUNUM);
SELECT * FROM USER_CONS_COLUMNS WHERE TABLE_NAME = 'SCORE';

-- 성적을 입력하면 총점과 평균이 자동으로 계산이되어 입력되는 프로시저
CREATE OR REPLACE NONEDITIONABLE PROCEDURE SCORE_PROC_INPUT (
    VSTUNUM IN SCORE.STUNUM%TYPE,
    VNAME IN SCORE.NAME%TYPE,
    VKOR IN SCORE.KOR%TYPE,
    VENG IN SCORE.ENG%TYPE,
    VMAT IN SCORE.MAT%TYPE
)
IS 
    VTOT NUMBER;
    VAVE NUMBER;
BEGIN
    VTOT := VKOR + VENG + VMAT;
    VAVE := (VTOT)/3;
    INSERT INTO SCORE(STUNUM,NAME,KOR,ENG,MAT,TOT,AVE)
    VALUES (VSTUNUM,VNAME,VKOR,VENG,VMAT,VTOT,VAVE);
END;
/

EXECUTE SCORE_PROC_INPUT (1,'홍길동',99,80,85);
SELECT * FROM SCORE;

-- 성적을 입력하면 총점과 평균이 자동으로 계산되어 입력되는 트리거
CREATE OR REPLACE TRIGGER SCORE_TRIGGER AFTER
INSERT ON SCORE
FOR EACH ROW

DECLARE 
    VTOT NUMBER(3);
    VAVE NUMBER(5,2);
BEGIN
    VTOT := :NEW.KOR + :NEW.ENG + :NEW.MAT;
    VAVE := VTOT / 3;
END;
/

INSERT INTO SCORE (STUNUM,NAME,KOR,ENG,MAT) VALUES (2,'김희진',95,84,79);
SELECT * FROM SCORE;
INSERT INTO SCORE (STUNUM,NAME,KOR,ENG,MAT) VALUES (3,'이현수',83,89,99);

-- 등수를 처리하는 저장 프로시저를 생성
CREATE OR REPLACE PROCEDURE SCORE_RANK_PROC
IS 

BEGIN
UPDATE SCORE S 
SET RANK=
(SELECT S_RANK FROM(SELECT STUNUM,RANK()OVER(ORDER BY AVE DESC) AS S_RANK FROM SCORE) WHERE S.STUNUM=STUNUM);
END;
/
EXECUTE SCORE_RANK_PROC;
SELECT * FROM SCORE ORDER BY RANK ASC, KOR DESC, ENG DESC, MAT DESC;

-- 윈도우 함수를 이용해서 생성해보자
SELECT NAME, TOT, RANK() OVER(ORDER BY TOT DESC) RANK FROM SCORE ORDER BY TOT DESC;

CREATE OR REPLACE PROCEDURE SCORE_RANK_PROC
IS 
    VSCORE_ROWTYPE SCORE%TYPE;
    CURSOR C1 IS
    SELECT STUNUM, NAME, TOT, RANK() OVER(ORDER BY TOT DESC) RANK FROM SCORE ORDER BY TOT DESC;
BEGIN
    FOR VSCORE_RT IN C1 LOOP
        UPDATE SCORE SET RANK = VSCORE_RT.RANK WHERE STUNUM = VSCORE_RT.STUNUM;
    END LOOP;
    COMMIT;
END;
/